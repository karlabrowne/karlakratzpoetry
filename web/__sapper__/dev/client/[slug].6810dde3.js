import { c as client, S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, u as urlFor, f as fade, e as element, t as text, a as claim_element, b as children, h as claim_text, j as detach_dev, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, E as noop, y as empty, w as space, P as query_selector_all, x as claim_space, q as add_render_callback, r as create_bidirectional_transition, H as HtmlTag } from './client.5a9e8125.js';
import { b as blocksToHtml_1 } from './blocksToHtml.e126179f.js';

/* src/routes/poems/[slug].svelte generated by Svelte v3.37.0 */
const file = "src/routes/poems/[slug].svelte";

// (39:2) {#if backgroundTitle}
function create_if_block_1(ctx) {
	let h2;
	let t;

	const block = {
		c: function create() {
			h2 = element("h2");
			t = text(/*backgroundTitle*/ ctx[3]);
			this.h();
		},
		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t = claim_text(h2_nodes, /*backgroundTitle*/ ctx[3]);
			h2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "background-title");
			add_location(h2, file, 39, 3, 1603);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h2, anchor);
			append_dev(h2, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(h2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(39:2) {#if backgroundTitle}",
		ctx
	});

	return block;
}

// (42:2) {#if background}
function create_if_block(ctx) {
	let html_tag;
	let raw_value = blocksToHtml_1({ blocks: /*background*/ ctx[2] }) + "";
	let html_anchor;

	const block = {
		c: function create() {
			html_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			html_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			html_tag = new HtmlTag(html_anchor);
		},
		m: function mount(target, anchor) {
			html_tag.m(raw_value, target, anchor);
			insert_dev(target, html_anchor, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(html_anchor);
			if (detaching) html_tag.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(42:2) {#if background}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let t0;
	let div2;
	let h1;
	let t1;
	let h1_transition;
	let t2;
	let div0;
	let img;
	let img_src_value;
	let img_transition;
	let t3;
	let html_tag;
	let raw_value = blocksToHtml_1({ blocks: /*content*/ ctx[1] }) + "";
	let t4;
	let div1;
	let t5;
	let current;
	document.title = title_value = /*name*/ ctx[0];
	let if_block0 = /*backgroundTitle*/ ctx[3] && create_if_block_1(ctx);
	let if_block1 = /*background*/ ctx[2] && create_if_block(ctx);

	const block = {
		c: function create() {
			t0 = space();
			div2 = element("div");
			h1 = element("h1");
			t1 = text(/*name*/ ctx[0]);
			t2 = space();
			div0 = element("div");
			img = element("img");
			t3 = space();
			t4 = space();
			div1 = element("div");
			if (if_block0) if_block0.c();
			t5 = space();
			if (if_block1) if_block1.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-i5v7vb\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { id: true, class: true });
			var div2_nodes = children(div2);
			h1 = claim_element(div2_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, /*name*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			div0 = claim_element(div2_nodes, "DIV", { id: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { alt: true, src: true, class: true });
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			t4 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", {});
			var div1_nodes = children(div1);
			if (if_block0) if_block0.l(div1_nodes);
			t5 = claim_space(div1_nodes);
			if (if_block1) if_block1.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "poem-title");
			add_location(h1, file, 31, 1, 1366);
			attr_dev(img, "alt", /*poemImage*/ ctx[4].alt);
			if (img.src !== (img_src_value = urlFor(/*poemImage*/ ctx[4]).url())) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "svelte-f6om60");
			add_location(img, file, 33, 2, 1439);
			attr_dev(div0, "id", "image");
			add_location(div0, file, 32, 1, 1420);
			html_tag = new HtmlTag(t4);
			add_location(div1, file, 37, 1, 1570);
			attr_dev(div2, "id", "content");
			attr_dev(div2, "class", "svelte-f6om60");
			add_location(div2, file, 30, 0, 1346);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, h1);
			append_dev(h1, t1);
			append_dev(div2, t2);
			append_dev(div2, div0);
			append_dev(div0, img);
			append_dev(div2, t3);
			html_tag.m(raw_value, div2);
			append_dev(div2, t4);
			append_dev(div2, div1);
			if (if_block0) if_block0.m(div1, null);
			append_dev(div1, t5);
			if (if_block1) if_block1.m(div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*name*/ 1) && title_value !== (title_value = /*name*/ ctx[0])) {
				document.title = title_value;
			}

			if (/*backgroundTitle*/ ctx[3]) if_block0.p(ctx, dirty);
			if (/*background*/ ctx[2]) if_block1.p(ctx, dirty);
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!h1_transition) h1_transition = create_bidirectional_transition(h1, fade, {}, true);
				h1_transition.run(1);
			});

			add_render_callback(() => {
				if (!img_transition) img_transition = create_bidirectional_transition(img, fade, {}, true);
				img_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!h1_transition) h1_transition = create_bidirectional_transition(h1, fade, {}, false);
			h1_transition.run(0);
			if (!img_transition) img_transition = create_bidirectional_transition(img, fade, {}, false);
			img_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div2);
			if (detaching && h1_transition) h1_transition.end();
			if (detaching && img_transition) img_transition.end();
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	function adopt(value) {
		return value instanceof P
		? value
		: new P(function (resolve) {
					resolve(value);
				});
	}

	return new (P || (P = Promise))(function (resolve, reject) {
			function fulfilled(value) {
				try {
					step(generator.next(value));
				} catch(e) {
					reject(e);
				}
			}

			function rejected(value) {
				try {
					step(generator["throw"](value));
				} catch(e) {
					reject(e);
				}
			}

			function step(result) {
				result.done
				? resolve(result.value)
				: adopt(result.value).then(fulfilled, rejected);
			}

			step((generator = generator.apply(thisArg, _arguments || [])).next());
		});
};

function preload({ params: { slug } }) {
	return __awaiter(this, void 0, void 0, function* () {
		const query = `*[slug.current == "${slug}"]`;
		const res = yield client.fetch(query);
		const poem = yield res.shift();
		return { poem };
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("U5Bslugu5D", slots, []);
	let { poem } = $$props;
	const { name, content, background, backgroundTitle, poemImage } = poem;
	const writable_props = ["poem"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Bslugu5D> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("poem" in $$props) $$invalidate(5, poem = $$props.poem);
	};

	$$self.$capture_state = () => ({
		__awaiter,
		client,
		urlFor,
		preload,
		fade,
		blocksToHtml: blocksToHtml_1,
		poem,
		name,
		content,
		background,
		backgroundTitle,
		poemImage
	});

	$$self.$inject_state = $$props => {
		if ("poem" in $$props) $$invalidate(5, poem = $$props.poem);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [name, content, background, backgroundTitle, poemImage, poem];
}

class U5Bslugu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { poem: 5 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bslugu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*poem*/ ctx[5] === undefined && !("poem" in props)) {
			console.warn("<U5Bslugu5D> was created without expected prop 'poem'");
		}
	}

	get poem() {
		throw new Error("<U5Bslugu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set poem(value) {
		throw new Error("<U5Bslugu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bslugu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3NsdWddLjY4MTBkZGUzLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL3BvZW1zL1tzbHVnXS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCIgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB7IGNsaWVudCwgdXJsRm9yIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9TYW5pdHlDbGllbnQnXG5cblx0ZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXM6IHsgc2x1ZyB9IH0pIHtcblx0XHRjb25zdCBxdWVyeSA9IGAqW3NsdWcuY3VycmVudCA9PSBcIiR7IHNsdWcgfVwiXWBcblx0XG5cdFx0Y29uc3QgcmVzID0gYXdhaXQgY2xpZW50LmZldGNoKHF1ZXJ5KVxuXHRcdGNvbnN0IHBvZW0gPSBhd2FpdCByZXMuc2hpZnQoKVxuXHRcdHJldHVybiB7IHBvZW0gfVxuXHR9XG48L3NjcmlwdD5cblxuPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW1wb3J0IHsgZmFkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJ1xuXHRpbXBvcnQgYmxvY2tzVG9IdG1sIGZyb20gJ0BzYW5pdHkvYmxvY2stY29udGVudC10by1odG1sJ1xuXG5cdHR5cGUgU2x1ZyA9IHtcblx0XHRfdHlwZTogc3RyaW5nLFxuXHRcdGN1cnJlbnQ6IHN0cmluZyxcblx0fTtcblxuXHR0eXBlIEltYWdlID0ge1xuXHRcdF90eXBlOiBzdHJpbmcsXG5cdFx0YWx0OiBzdHJpbmcsXG5cdFx0YXNzZXQ6IGFueSxcblx0XHRjYXB0aW9uOiBzdHJpbmcsXG5cdFx0Y3JvcDogYW55LFxuXHRcdGhvdHNwb3Q6IGFueVxuXHR9XG5cblx0ZXhwb3J0IGxldCBwb2VtOiB7IHNsdWc6IHN0cmluZywgbmFtZTogc3RyaW5nLCBjb250ZW50OkFycmF5PGFueT4sIGJhY2tncm91bmQ6QXJyYXk8YW55PiwgYmFja2dyb3VuZFRpdGxlOnN0cmluZywgcG9lbUltYWdlOkltYWdlfTtcblxuXHRjb25zdCB7IG5hbWUsIGNvbnRlbnQsIGJhY2tncm91bmQsIGJhY2tncm91bmRUaXRsZSwgcG9lbUltYWdlIH0gPSBwb2VtXG48L3NjcmlwdD5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+eyBuYW1lIH08L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGRpdiBpZD1cImNvbnRlbnRcIj5cblx0PGgxIGNsYXNzPVwicG9lbS10aXRsZVwiIHRyYW5zaXRpb246ZmFkZT57IG5hbWUgfTwvaDE+XG5cdDxkaXYgaWQ9XCJpbWFnZVwiPlxuXHRcdDxpbWcgYWx0PVwie3BvZW1JbWFnZS5hbHR9XCIgc3JjPVwieyB1cmxGb3IocG9lbUltYWdlKS51cmwoKSB9XCIgdHJhbnNpdGlvbjpmYWRlPlxuXHQ8L2Rpdj5cblx0e0BodG1sIGJsb2Nrc1RvSHRtbCh7IGJsb2NrczogY29udGVudCB9KX1cblxuXHQ8ZGl2PlxuXHRcdHsjaWYgYmFja2dyb3VuZFRpdGxlfVxuXHRcdFx0PGgyIGNsYXNzPVwiYmFja2dyb3VuZC10aXRsZVwiPnsgYmFja2dyb3VuZFRpdGxlIH08L2gyPlxuXHRcdHsvaWZ9XG5cdFx0eyNpZiBiYWNrZ3JvdW5kfVxuXHRcdFx0e0BodG1sIGJsb2Nrc1RvSHRtbCh7IGJsb2NrczogYmFja2dyb3VuZCB9KX1cblx0XHR7L2lmfVxuXHQ8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGU+XG5cdGltZyB7XG5cdFx0Ym9yZGVyLXJhZGl1czogMTAwcHg7XG5cdFx0d2lkdGg6IDNyZW07XG5cdFx0aGVpZ2h0OiAzcmVtO1xuXHRcdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cdH1cblx0XG5cdCNjb250ZW50IHtcblx0XHRtYXgtd2lkdGg6IDQ4Y2g7XG5cdH1cbjwvc3R5bGU+Il0sIm5hbWVzIjpbImJsb2Nrc1RvSHRtbCIsInRoaXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O2dDQWdEa0MsR0FBZTs7Ozs7O2dEQUFmLEdBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lCQUd2Q0EsY0FBWSxHQUFHLE1BQU0saUJBQUUsR0FBVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lCQVBuQ0EsY0FBWSxHQUFHLE1BQU0sY0FBRSxHQUFPOzs7Ozt5Q0FSNUIsR0FBSTtxQ0FXUCxHQUFlO2dDQUdmLEdBQVU7Ozs7Ozs7c0JBVnlCLEdBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NDQUFKLEdBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQ0FFakMsR0FBUyxJQUFDLEdBQUc7b0NBQVUsTUFBTSxlQUFDLEdBQVMsS0FBRSxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttRkFOL0MsR0FBSTs7OzsyQkFXUCxHQUFlO3NCQUdmLEdBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWxEaUIsU0FBQSxHQUFBQyxTQUFBLElBQUFBLFNBQUEsQ0FBQSxTQUFBLGNBQUEsT0FBQSxFQUFBLFVBQUEsRUFBQSxDQUFBLEVBQUEsU0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBR1gsT0FBTyxHQUFHLE1BQU0sSUFBSSxJQUFJOztRQUN2QyxLQUFLLHlCQUEwQixJQUFLO1FBRXBDLEdBQUcsU0FBUyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUs7UUFDOUIsSUFBSSxTQUFTLEdBQUcsQ0FBQyxLQUFLO1dBQ25CLElBQUk7Ozs7Ozs7T0FzQkgsSUFBdUg7U0FFMUgsSUFBSSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLFNBQVMsS0FBSyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
