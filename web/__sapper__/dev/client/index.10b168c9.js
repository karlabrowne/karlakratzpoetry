import { c as client, S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, g as globals, v as validate_slots, f as fade, w as space, e as element, t as text, P as query_selector_all, j as detach_dev, x as claim_space, a as claim_element, b as children, h as claim_text, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, E as noop, q as add_render_callback, r as create_bidirectional_transition, H as HtmlTag } from './client.8f0cb9ad.js';
import { b as blocksToHtml_1 } from './blocksToHtml.2c897b14.js';

/* src/routes/poems/index.svelte generated by Svelte v3.37.0 */

const { console: console_1 } = globals;
const file = "src/routes/poems/index.svelte";

function create_fragment(ctx) {
	let t0;
	let div;
	let h1;
	let t1;
	let h1_transition;
	let t2;
	let html_tag;
	let raw_value = blocksToHtml_1({ blocks: /*content*/ ctx[1] }) + "";
	let current;

	const block = {
		c: function create() {
			t0 = space();
			div = element("div");
			h1 = element("h1");
			t1 = text(/*name*/ ctx[0]);
			t2 = space();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1qupx5s\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { id: true, class: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, /*name*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Poems";
			attr_dev(h1, "class", "poem-title");
			add_location(h1, file, 33, 1, 1458);
			html_tag = new HtmlTag(null);
			attr_dev(div, "id", "content");
			attr_dev(div, "class", "svelte-c1iw44");
			add_location(div, file, 32, 0, 1438);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, h1);
			append_dev(h1, t1);
			append_dev(div, t2);
			html_tag.m(raw_value, div);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!h1_transition) h1_transition = create_bidirectional_transition(h1, fade, {}, true);
				h1_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!h1_transition) h1_transition = create_bidirectional_transition(h1, fade, {}, false);
			h1_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div);
			if (detaching && h1_transition) h1_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	function adopt(value) {
		return value instanceof P
		? value
		: new P(function (resolve) {
					resolve(value);
				});
	}

	return new (P || (P = Promise))(function (resolve, reject) {
			function fulfilled(value) {
				try {
					step(generator.next(value));
				} catch(e) {
					reject(e);
				}
			}

			function rejected(value) {
				try {
					step(generator["throw"](value));
				} catch(e) {
					reject(e);
				}
			}

			function step(result) {
				result.done
				? resolve(result.value)
				: adopt(result.value).then(fulfilled, rejected);
			}

			step((generator = generator.apply(thisArg, _arguments || [])).next());
		});
};

function preload() {
	return __awaiter(this, void 0, void 0, function* () {
		const query = "*[_type == 'poem' && featured]{_id, slug, name, content, background}";
		const featuredPoemArr = yield client.fetch(query);
		const featuredPoem = featuredPoemArr[Math.floor(Math.random() * featuredPoemArr.length)];
		return { featuredPoem };
	});
}



function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Poems", slots, []);
	let { featuredPoem } = $$props;
	console.log(featuredPoem);
	const { name, content } = featuredPoem;
	const writable_props = ["featuredPoem"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Poems> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("featuredPoem" in $$props) $$invalidate(2, featuredPoem = $$props.featuredPoem);
	};

	$$self.$capture_state = () => ({
		__awaiter,
		client,
		preload,
		fade,
		blocksToHtml: blocksToHtml_1,
		featuredPoem,
		name,
		content
	});

	$$self.$inject_state = $$props => {
		if ("featuredPoem" in $$props) $$invalidate(2, featuredPoem = $$props.featuredPoem);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [name, content, featuredPoem];
}

class Poems extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { featuredPoem: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Poems",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*featuredPoem*/ ctx[2] === undefined && !("featuredPoem" in props)) {
			console_1.warn("<Poems> was created without expected prop 'featuredPoem'");
		}
	}

	get featuredPoem() {
		throw new Error("<Poems>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set featuredPoem(value) {
		throw new Error("<Poems>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Poems;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMTBiMTY4YzkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvcG9lbXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiIGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyBjbGllbnQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL1Nhbml0eUNsaWVudCdcblx0XG5cdGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKCkge1xuXHRcdGNvbnN0IHF1ZXJ5ID0gXCIqW190eXBlID09ICdwb2VtJyAmJiBmZWF0dXJlZF17X2lkLCBzbHVnLCBuYW1lLCBjb250ZW50LCBiYWNrZ3JvdW5kfVwiO1xuXHRcdGNvbnN0IGZlYXR1cmVkUG9lbUFyciA9IGF3YWl0IGNsaWVudC5mZXRjaChxdWVyeSk7XG5cdFx0Y29uc3QgZmVhdHVyZWRQb2VtID0gZmVhdHVyZWRQb2VtQXJyW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGZlYXR1cmVkUG9lbUFyci5sZW5ndGgpXVxuXHRcdHJldHVybiB7IGZlYXR1cmVkUG9lbSB9XG5cdH07XG48L3NjcmlwdD5cblxuPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW1wb3J0IHsgZmFkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJ1xuXHRpbXBvcnQgYmxvY2tzVG9IdG1sIGZyb20gJ0BzYW5pdHkvYmxvY2stY29udGVudC10by1odG1sJ1xuXHR0eXBlIFNsdWcgPSB7XG5cdFx0X3R5cGU6IHN0cmluZyxcblx0XHRjdXJyZW50OiBzdHJpbmcsXG5cdH07XG5cblx0ZXhwb3J0IGxldCBmZWF0dXJlZFBvZW06IHsgc2x1ZzogU2x1ZywgbmFtZTogc3RyaW5nLCBfaWQ6IHN0cmluZywgY29udGVudDogQXJyYXk8YW55PiwgYmFja2dyb3VuZDogQXJyYXk8YW55PiB9O1xuXHRjb25zb2xlLmxvZyhmZWF0dXJlZFBvZW0pXG5cblx0Y29uc3QgeyBuYW1lLCBjb250ZW50IH0gPSBmZWF0dXJlZFBvZW1cbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5Qb2VtczwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48ZGl2IGlkPVwiY29udGVudFwiPlxuXHQ8aDEgY2xhc3M9XCJwb2VtLXRpdGxlXCIgdHJhbnNpdGlvbjpmYWRlPnsgbmFtZSB9PC9oMT5cblx0e0BodG1sIGJsb2Nrc1RvSHRtbCh7IGJsb2NrczogY29udGVudCB9KX1cbjwvZGl2PlxuXG48c3R5bGU+XG5cdCNjb250ZW50IHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHRcdG1heC13aWR0aDogNDhjaDtcblx0fVxuXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY1MHB4KXtcblx0XHQjY29udGVudCB7XG5cdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR9XG5cdH1cbjwvc3R5bGU+XG5cbjwhLS0gVE9ETzogaW1wbGltZW50IHBvcnRhYmxlIHRleHQgY29tcG9uZW50IGh0dHBzOi8vZ2l0aHViLmNvbS9tb3ZpbmdicmFuZHMvc3ZlbHRlLXBvcnRhYmxlLXRleHQgLS0+Il0sIm5hbWVzIjpbImJsb2Nrc1RvSHRtbCIsInRoaXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7aUJBK0JRQSxjQUFZLEdBQUcsTUFBTSxjQUFFLEdBQU87Ozs7Ozs7O3NCQURJLEdBQUk7Ozs7Ozs7Ozs7OztzQ0FBSixHQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBOUJaLFNBQUEsR0FBQUMsU0FBQSxJQUFBQSxTQUFBLENBQUEsU0FBQSxjQUFBLE9BQUEsRUFBQSxVQUFBLEVBQUEsQ0FBQSxFQUFBLFNBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztTQUdYLE9BQU87O1FBQ3RCLEtBQUssR0FBRyxzRUFBc0U7UUFDOUUsZUFBZSxTQUFTLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSztRQUMxQyxZQUFZLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxlQUFlLENBQUMsTUFBTTtXQUM3RSxZQUFZOzs7Ozs7Ozs7T0FZWCxZQUFvRztDQUMvRyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVk7U0FFaEIsSUFBSSxFQUFFLE9BQU8sS0FBSyxZQUFZOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
